{
  "title": "Journal Assistant",
  "config": {
    "step": {
      "user": {
        "title": "Configure Journal Assistant",
        "description": "Create a Journal from an electronic notebook, using Google vector embeddings.",
        "data": {
          "name": "Journal Name",
          "api_key": "Google Gemini API Key",
          "notes": "Notes"
        }
      }
    },
    "error": {
      "api_error": "Error talking to ChromaDB API."
    }
  },
  "services": {
    "process_media": {
      "name": "Process Media",
      "description": "Process media and injest into the journal assistant.",
      "fields": {
        "media_source": {
          "name": "Media source uri path",
          "description": "Path to the image or video to upload as a uri",
          "example": "media-source://media_source/path"
        },
        "config_entry_id": {
          "name": "Integration Id",
          "description": "The Journal Assistant integration id."
        }
      }
    }
  },
  "exceptions": {

    "integration_not_found": {
      "message": "Integration \"{target}\" not found in registry."
    },
    "media_source_not_found": {
      "message": "Media source \"{media_source}\" not found."
    },
    "media_source_download_error": {
      "message": "Error downloading media source \"{media_source}\"."
    },
    "journal_page_processing_error": {
      "message": "Invalid vision model response format processing journal page from media source \"{media_source}\""
    }
  },
  "entity": {
    "sensor": {
      "vector_db_count": {
        "name": "Vector DB Count"
      },
      "scanned_files": {
        "name": "Scanned Files"
      },
      "scanned_folders": {
        "name": "Scanned Folders"
      },
      "processed_files": {
        "name": "Processed Files"
      },
      "skipped_items": {
        "name": "Skipped Items"
      },
      "errors": {
        "name": "Errors"
      },
      "last_scan_start": {
        "name": "Last Scan Start"
      },
      "last_scan_end": {
        "name": "Last Scan End"
      }
    }
  }
}
